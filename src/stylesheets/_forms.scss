form {
	position: relative;

	input::-ms-clear {
		display: none;
	}

	// inputs - boxed
	.input-boxed {
		border: 1px solid $color-primary-grey-light;
		border-radius: 1px;
	}

	.input-container {
		position: relative;
		margin: 40px 0 10px;

		input[type=text], input[type=password] {
			height: 40px;
			padding: 10px 0;
			box-shadow: none;
			font-family: $font-primary;
			font-size: 1rem;
			line-height: 40px;
			&.form-control {
				box-shadow: 0 0 0 1000px $white inset;

				-webkit-box-shadow: 0 0 0 1000px $white inset;
			}
		}
		i {
			position: absolute;
			top: 5px;
			right: 0;
		}

		.lbl.lbl-fielderror {
			top: -14px;
			color: $error;
			font-size: 0.9333rem; //14px
			font-weight: normal;
		}
	}

	.input-with-icon {
		position: relative;

		.input-icon {
			position: absolute;
			top: 10px;
			right: 0;
		}
	}

	input[type=text], input[type=password] {
		width: 100%;
		padding: 10px 0 6px 2px;
		border: 0;
		border-bottom: 1px solid $color-grey-one;
		border-radius: 0;
		color: $base-text-color;
		font-family: $font-primary;
		font-size: 1.2rem;
		+ .lbl {
			position: absolute;
			top: 12px;
			left: 1px;
			transition: $form-input-transition;
			color: $light-gray-text;
			font-size: 1.2rem; //18px
			pointer-events: none;

			-o-transition: $form-input-transition;
			-ms-transition: $form-input-transition;
			-moz-transition: $form-input-transition;
			-webkit-transition: $form-input-transition;

			// ToDo: Make exception for login page in login.scss
		}


		&.ng-invalid.ng-dirty.ng-touched:not(.required-fix), &.form-control.ng-invalid.ng-dirty:not(.required-fix) {
			border-bottom-color: $error;
			+ .lbl {
				color: $error;
			}
		}

		&.ng-invalid.ng-touched:not(.required-fix) {
			border-bottom-color: $error;
			+ .lbl {
				color: $error;
			}
		}

		&.ng-invalid.required-force, &.form-control.ng-invalid.required-force {
			border-bottom-color: $error;
			+ .lbl {
				color: $error;
			}
		}

		&.ng-touched.ng-invalid {
			top: 12px;
			left: 1px;
			// font-size: 1.2rem;
		}

		&:focus,
		&.ng-valid,
		&.ng-touched.ng-valid {
			// border-bottom-color: $color-primary-blue;

			+ .lbl {
				top: -14px;
				color: $color-primary-blue;
				font-size: 0.9333rem; //14px
				font-weight: normal;
			}
		}

		&:hover {
			border-bottom-color: $medium-gray-text;
		}

		/*&:valid {
			 + .lbl {
				top: -14px;
				font-family: $font-primary-light;
				font-size: 14px;
				font-weight: normal;
			}
		}*/

		&:required {
			box-shadow: none;
		}

		&:disabled {
			background-color: transparent;
		}
	}

	.lbl, .lbl-sml {
		span {
			color: $red;
		}
	}

	.lbl-sml {
		color: $light-gray-text;
		font-size: 14px;
	}

	label {
		font-family: $font-primary-light;
	}

	&.form-horizontal {
		&.align-labels-left {
			.control-label {
				text-align: left;
			}
		}
	}

	.has-error {
		border: 1px solid $form-error-border-color;
		border-radius: 4px;
	}
}

.select-field {
	display: flex;
	align-items: baseline;
	margin: 40px 0 10px;
	label {
		flex: 1;
		color: $color-primary-grey-dark;
	}
	span {
		flex: 2;
	}
}
.dropdown {
	z-index: 2;
	height: 34px; // todo: FIX ME - Affects dropdown navigation menu
	color: $color-primary-blue;
	white-space: nowrap;
	&:hover {
		cursor: pointer;
	}

	&.alt {
		color: rgba(255,255,255,1);

		select {
			border-bottom: 1px solid rgba(255,255,255,0.6);

			option {
				background-color: $white;
				color: $color-primary-blue;
			}
		}
	}

	select {
		width: auto;
		height: 34px;
		padding: 10px 30px 0px 10px;
		border: 0;
		border-bottom: 1px solid #d0d0d0;
		border-radius: 0;
		background: transparent;
		color: $color-primary-blue;
		cursor: pointer;
		font-size: 1em;

		-webkit-appearance: none;
		-moz-appearance: none;
		&.ng-invalid.ng-touched:not(.required-fix) {
			color: $red;
		}

		&.ng-invalid.ng-touched:not(.required-fix) {
			border-bottom-color: $error;
		}
	}

	select::-ms-expand {
		display: none;
	}

	i {
		position: relative;
		z-index: 3;
		top: 4px;
		right: 20px;
		color: $color-primary-blue;
		font-size: 1.333rem;
		pointer-events: none;
	}
}

.form-button-row {
	padding-top: 2rem;
}

.control {
	&.close {
		color: $app-link-text-color;
		text-align: right;
		cursor: pointer;
	}
}